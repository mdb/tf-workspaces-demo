name: Terraform

on:
  pull_request:
  push:
    branch: main

jobs:
  set-up:
    runs-on: ubuntu-latest
    outputs:
      workspaces: ${{ steps.set-matrix.outputs.workspaces }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Start and bootstrap localstack mock AWS environment
        run: make up

        # actions/upload-artifact does not preserve the necessary
        # localstack-data file permissions. Tarring the localstack-data
        # directory offers a workaround.
      - name: Tar localstack-data to preserve file permissions
        run: tar -cvf localstack-data.tar localstack-data

      - name: Upload localstack data for use in subsequent jobs
        uses: actions/upload-artifact@v4
        with:
          name: localstack-data
          path: localstack-data.tar
          if-no-files-found: error
          retention-days: 1

      - name: Set Terraform workspaces matrix
        id: set-matrix
        run: echo "workspaces=$(jq -c .workspaces < ./workspaces.json)" >> $GITHUB_OUTPUT

  terraform-plan:
    runs-on: ubuntu-latest
    needs: set-up
    strategy:
      matrix: ${{ fromJson(needs.set-up.outputs.workspaces) }}
      # NOTE: Because the steps in this workflow each write to the same localstack
      # S3 bucket and persist the results via @actions/upload, it's necessary to
      # prevent race conditions by imposing restrictions on parallelism.
      # A real-world workflow would likely not restrict parallelism.
      max-parallel: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Determine localstack-data artifact name generated from previous-run matrix job
        uses: actions/github-script@v7
        id: localstack-data-artifact-name
        with:
          script: |
            const jobIndex = ${{ strategy.job-index }};
            return jobIndex === 0 ? 'localstack-data' : `localstack-data-${ jobIndex - 1}`
          result-encoding: string

      - name: Download persisted localstack data generated from previous jobs
        uses: actions/download-artifact@v3
        with:
          name: ${{ steps.localstack-data-artifact-name.outputs.result }}
          path: localstack-data-tar

      - name: Untar localstack data to localstack-data directory
        run: tar xf localstack-data-tar/${{ steps.localstack-data-artifact-name.outputs.result }}.tar --directory .

      - name: Start localstack mock AWS environment
        run: make start-localstack

      - name: Set up tfenv
        uses: rhythmictech/actions-setup-tfenv@v0.1.2

      - name: Verify presence of localstack S3 bucket
        run: curl --fail http://localhost.localstack.cloud:4566/tf-workspaces-demo

      - name: Terraform plan ${{ matrix.workspace }}
        run: make plan WORKSPACE=${{ matrix.workspace }}

      - name: Issue GET request to ${{ matrix.workspace }} Terraform state at ${{ matrix.workspace }}-specific S3 endpoint
        run: curl "http://localhost.localstack.cloud:4566/tf-workspaces-demo/env:/${{ matrix.workspace }}/terraform.tfstate"

      - name: Determine expected localstack-data S3 object count
        uses: actions/github-script@v7
        id: expected-localstack-data-s3-object-count
        with:
          script: |
            const jobIndex = ${{ strategy.job-index }};
            return jobIndex + 1;
          result-encoding: string

        # NOTE: gresau/localstack-persist can seemingly experience a delay
        # reflecting an S3 object in store.json; this can lead to race conditions
        # in which an S3 object in localstack-data/s3/assets is not present in
        # store.json.
      - name: Wait until localstack-data has been correctly persisted
        run: ./scripts/wait-for-localstack-persistence.sh ${{ steps.expected-localstack-data-s3-object-count.outputs.result }}

      - name: Upload Terraform plan as build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.workspace }}
          path: ${{ matrix.workspace }}.plan
          if-no-files-found: ignore
          retention-days: 1

        # actions/upload-artifact does not preserve the necessary
        # localstack-data file permissions. Tarring the localstack-data
        # directory offers a workaround.
      - name: Tar localstack-data directory to preserve file permissions
        run: tar -cvf localstack-data-${{ strategy.job-index }}.tar localstack-data

        # By treating the localstack-data directory as a build artifact, localstack data
        # can be persisted across GH Actions steps.
      - name: Upload localstack-data directory tarball as build artifact for use in subsequent jobs
        uses: actions/upload-artifact@v4
        with:
          name: localstack-data-${{ strategy.job-index }}
          path: localstack-data-${{ strategy.job-index }}.tar
          if-no-files-found: error
          retention-days: 1

  terraform-apply:
    # NOTE: only apply on pushes to main.
    # In a real world scenario, it may make sense to invoke apply as a different
    # workflow, entirely.
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [set-up, terraform-plan]
    strategy:
      matrix: ${{ fromJson(needs.set-up.outputs.workspaces) }}
      # NOTE: Because the steps in this workflow each write to the same localstack
      # S3 bucket and persist the results via @actions/upload, it's necessary to
      # prevent race conditions by imposing restrictions on parallelism.
      # A real-world workflow would likely not restrict parallelism.
      max-parallel: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up tfenv
        uses: rhythmictech/actions-setup-tfenv@v0.1.2

      - name: Determine final localstack data artifact name generated from prior jobs
        uses: actions/github-script@v7
        id: final-localstack-data-artifact-name
        with:
          script: |
            const suffix = ${{ strategy.job-total }} - 1
            return `localstack-data-${suffix}`
          result-encoding: string

      - name: Download final localstack data generated from prior jobs
        uses: actions/download-artifact@v3
        with:
          name: ${{ steps.final-localstack-data-artifact-name.outputs.result }}
          path: localstack-data-tar

      - name: Untar localstack data to localstack-data
        run: tar xf localstack-data-tar/${{ steps.final-localstack-data-artifact-name.outputs.result }}.tar --directory .

      - name: Start localstack mock AWS environment
        run: make start-localstack

      - name: Verify contents of localstack-data directory for debugging purposes
        run: docker compose exec --no-TTY localstack ls -R /persisted-data

      - name: Show all s3://tf-workspaces-demo objects in localstack-data/s3/store.json for debugging purposes
        run: jq '.data["000000000000"]["us-east-1"]["_global"]["buckets"]["tf-workspaces-demo"]["objects"]["_store"] | keys' localstack-data/s3/store.json

      - name: Ensure localstack s3://tf-workspaces-demo/env:/${{ matrix.workspace }}/terraform.tfstate availability
        uses: artiz/poll-endpoint@1.0.2
        with:
          url: "http://localhost.localstack.cloud:4566/tf-workspaces-demo/env:/${{ matrix.workspace }}/terraform.tfstate"
          interval: 3000

      - name: Download Terraform plan
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.workspace }}

      - name: Terraform apply ${{ matrix.workspace }}
        run: make apply WORKSPACE="${{ matrix.workspace }}"

      - name: Issue GET request to ${{ matrix.workspace }} Terraform state at ${{ matrix.workspace }}-specific S3 endpoint
        run: curl "http://localhost.localstack.cloud:4566/tf-workspaces-demo/env:/${{ matrix.workspace }}/terraform.tfstate"

  terraform-plan-and-apply-ephemeral-pr-environment:
    # Only execute this job in response to pull requests
    if: github.event_name == 'pull_request'
    # Grant the workflow's GitHub token permissions to comment on PRs.
    permissions: write-all
    runs-on: ubuntu-latest
    needs: set-up

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download persisted localstack data generated from previous jobs
        uses: actions/download-artifact@v3
        with:
          name: localstack-data
          path: localstack-data-tar

      - name: Untar localstack data to localstack-data directory
        run: tar xf localstack-data-tar/localstack-data.tar --directory .

      - name: Start localstack mock AWS environment
        run: make start-localstack

      - name: Set up tfenv
        uses: rhythmictech/actions-setup-tfenv@v0.1.2

      - name: Set workspace name
        id: set-workspace
        run: echo "workspace=456_us-east-1_dev_pr-${{ github.event.number }}" >> $GITHUB_OUTPUT

      - name: Terraform plan ephemeral ${{ steps.set-workspace.outputs.workspace }} workspace
        run: make plan WORKSPACE=${{ steps.set-workspace.outputs.workspace }}

      - name: Terraform apply ephemeral ${{ steps.set-workspace.outputs.workspace }} workspace
        run: make apply WORKSPACE=${{ steps.set-workspace.outputs.workspace }}

      - name: Find existing PR comment with ${{ steps.set-workspace.outputs.workspace }} deployment details
        uses: peter-evans/find-comment@v2
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: ðŸ‘‹ This PR has been deployed to `${{ steps.set-workspace.outputs.workspace }}` via ${{ github.server_url }}/${{ github.repository }}/actions/runs/

      - name: Create PR comment with ${{ steps.set-workspace.outputs.workspace }} deployment details if a comment does not already exist
        if: steps.find-comment.outputs.comment-id == ''
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: ðŸ‘‹ This PR has been deployed to `${{ steps.set-workspace.outputs.workspace }}` via ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}.
          reactions: rocket

      - name: Update existing PR comment with ${{ steps.set-workspace.outputs.workspace }} deployment details if a comment already exists
        if: steps.find-comment.outputs.comment-id != ''
        uses: peter-evans/create-or-update-comment@v3
        with:
          edit-mode: replace
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          body: ðŸ‘‹ This PR has been deployed to `${{ steps.set-workspace.outputs.workspace }}` via ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}.

      - name: Tar localstack-data directory to preserve file permissions
        run: tar -cvf localstack-data-${{ steps.set-workspace.outputs.workspace }}.tar localstack-data

      - name: Upload localstack-data directory tarball as build artifact for use in subsequent jobs
        uses: actions/upload-artifact@v4
        with:
          name: localstack-data-${{ steps.set-workspace.outputs.workspace }}
          path: localstack-data-${{ steps.set-workspace.outputs.workspace }}.tar
          if-no-files-found: error
